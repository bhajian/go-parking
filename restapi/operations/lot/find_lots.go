package lot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// FindLotsHandlerFunc turns a function with the right signature into a find lots handler
type FindLotsHandlerFunc func(FindLotsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindLotsHandlerFunc) Handle(params FindLotsParams) middleware.Responder {
	return fn(params)
}

// FindLotsHandler interface for that can handle valid find lots params
type FindLotsHandler interface {
	Handle(FindLotsParams) middleware.Responder
}

// NewFindLots creates a new http.Handler for the find lots operation
func NewFindLots(ctx *middleware.Context, handler FindLotsHandler) *FindLots {
	return &FindLots{Context: ctx, Handler: handler}
}

/*FindLots swagger:route GET /lot lot findLots

FindLots find lots API

*/
type FindLots struct {
	Context *middleware.Context
	Handler FindLotsHandler
}

func (o *FindLots) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewFindLotsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
