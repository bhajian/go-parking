package lot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetStstusHandlerFunc turns a function with the right signature into a get ststus handler
type GetStstusHandlerFunc func(GetStstusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStstusHandlerFunc) Handle(params GetStstusParams) middleware.Responder {
	return fn(params)
}

// GetStstusHandler interface for that can handle valid get ststus params
type GetStstusHandler interface {
	Handle(GetStstusParams) middleware.Responder
}

// NewGetStstus creates a new http.Handler for the get ststus operation
func NewGetStstus(ctx *middleware.Context, handler GetStstusHandler) *GetStstus {
	return &GetStstus{Context: ctx, Handler: handler}
}

/*GetStstus swagger:route GET /lot/status/{id} lot getStstus

GetStstus get ststus API

*/
type GetStstus struct {
	Context *middleware.Context
	Handler GetStstusHandler
}

func (o *GetStstus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetStstusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
