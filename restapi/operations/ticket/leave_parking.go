package ticket

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LeaveParkingHandlerFunc turns a function with the right signature into a leave parking handler
type LeaveParkingHandlerFunc func(LeaveParkingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LeaveParkingHandlerFunc) Handle(params LeaveParkingParams) middleware.Responder {
	return fn(params)
}

// LeaveParkingHandler interface for that can handle valid leave parking params
type LeaveParkingHandler interface {
	Handle(LeaveParkingParams) middleware.Responder
}

// NewLeaveParking creates a new http.Handler for the leave parking operation
func NewLeaveParking(ctx *middleware.Context, handler LeaveParkingHandler) *LeaveParking {
	return &LeaveParking{Context: ctx, Handler: handler}
}

/*LeaveParking swagger:route POST /lot/{lotId}/ticket/{ticketId}/carLeaves ticket leaveParking

LeaveParking leave parking API

*/
type LeaveParking struct {
	Context *middleware.Context
	Handler LeaveParkingHandler
}

func (o *LeaveParking) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLeaveParkingParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
