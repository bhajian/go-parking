package ticket

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/user/todo/models"
)

// GetTicketOKCode is the HTTP code returned for type GetTicketOK
const GetTicketOKCode int = 200

/*GetTicketOK returns a ticket

swagger:response getTicketOK
*/
type GetTicketOK struct {

	/*
	  In: Body
	*/
	Payload *models.Ticket `json:"body,omitempty"`
}

// NewGetTicketOK creates GetTicketOK with default headers values
func NewGetTicketOK() *GetTicketOK {
	return &GetTicketOK{}
}

// WithPayload adds the payload to the get ticket o k response
func (o *GetTicketOK) WithPayload(payload *models.Ticket) *GetTicketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticket o k response
func (o *GetTicketOK) SetPayload(payload *models.Ticket) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTicketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTicketDefault generic error response

swagger:response getTicketDefault
*/
type GetTicketDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTicketDefault creates GetTicketDefault with default headers values
func NewGetTicketDefault(code int) *GetTicketDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTicketDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get ticket default response
func (o *GetTicketDefault) WithStatusCode(code int) *GetTicketDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get ticket default response
func (o *GetTicketDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get ticket default response
func (o *GetTicketDefault) WithPayload(payload *models.Error) *GetTicketDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticket default response
func (o *GetTicketDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTicketDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
