package ticket

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/user/todo/models"
)

// LeaveParkingOKCode is the HTTP code returned for type LeaveParkingOK
const LeaveParkingOKCode int = 200

/*LeaveParkingOK returns an integer as price

swagger:response leaveParkingOK
*/
type LeaveParkingOK struct {

	/*
	  In: Body
	*/
	Payload *models.Ticket `json:"body,omitempty"`
}

// NewLeaveParkingOK creates LeaveParkingOK with default headers values
func NewLeaveParkingOK() *LeaveParkingOK {
	return &LeaveParkingOK{}
}

// WithPayload adds the payload to the leave parking o k response
func (o *LeaveParkingOK) WithPayload(payload *models.Ticket) *LeaveParkingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the leave parking o k response
func (o *LeaveParkingOK) SetPayload(payload *models.Ticket) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LeaveParkingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*LeaveParkingDefault generic error response

swagger:response leaveParkingDefault
*/
type LeaveParkingDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLeaveParkingDefault creates LeaveParkingDefault with default headers values
func NewLeaveParkingDefault(code int) *LeaveParkingDefault {
	if code <= 0 {
		code = 500
	}

	return &LeaveParkingDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the leave parking default response
func (o *LeaveParkingDefault) WithStatusCode(code int) *LeaveParkingDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the leave parking default response
func (o *LeaveParkingDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the leave parking default response
func (o *LeaveParkingDefault) WithPayload(payload *models.Error) *LeaveParkingDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the leave parking default response
func (o *LeaveParkingDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LeaveParkingDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
